<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="getAllAccounts" doc:id="556b3001-1804-4a8e-b1f6-4d6800f722d5" >
		<choice doc:name="Choice" doc:id="2077f543-cfeb-411e-939f-f5174f88d025" >
			<when expression="#[attributes.queryParams.name != null and not isBlank(attributes.queryParams.name)]">
				<flow-ref doc:name="getAccountsByName" doc:id="768cf322-e4ec-4aed-a394-aa93195de1cd" name="getAccountsByName"/>
			</when>
			<when expression="#[attributes.queryParams.accType != null and not isBlank(attributes.queryParams.accType)]">
				<flow-ref doc:name="getAccountsByType" doc:id="ecc99083-7b12-468a-98fc-4df811fd41e6" name="getAccountsByType"/>
			</when>
			<when expression="#[attributes.queryParams.name != null and not isBlank(attributes.queryParams.name) and attributes.queryParams.accType != null and not isBlank(attributes.queryParams.accType)]">
				<flow-ref doc:name="getAccountsByNameType" doc:id="f94a1574-9bd2-4c43-8330-5955ecc7df7c" name="getAccountsByNameType"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAccounts" doc:id="5cc0b579-a6d3-47b4-947e-e21b8281fb30" name="getAllAccounts"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="getAccounts" doc:id="f69d6c86-faf9-49dc-a62a-7cec9a27f457" >
		<db:select doc:name="Select" doc:id="a75c6988-d184-421c-a656-421e7e5a17d6" config-ref="Database_Config">
					<db:sql><![CDATA[SELECT * from flights_customers]]></db:sql>
				</db:select>
		<ee:transform doc:name="Transform Message" doc:id="40437735-b5fc-414e-82e8-7bd22e2bce94" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ID: payload01.accountID as Number default 0,
	firstName: payload01.name default "",
	lastName: payload01.name default "",
	address: (payload01.city default "") ++ (payload01.state default ""),
	postal: payload01.postal default "",
	country: payload01.country default "",
	miles: payload01.miles default 0,
	creationDate: payload01.creationDate as String default "",
	accType: payload01.accountType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getAccountsByID" doc:id="560ca403-b117-4c7e-a19c-8488031b28ad" >
		<db:select doc:name="Select" doc:id="a264ca1d-f516-4870-a298-4f22ab9faf2b" config-ref="Database_Config">
			<db:sql ><![CDATA[SELECT * from flights_customers Where AccountID = :aid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{'aid': attributes.uriParams.ID}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="9289be89-26d5-4cf7-8498-efa2399d9d27" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ID: payload01.accountID as Number default 0,
	firstName: payload01.name default "",
	lastName: payload01.name default "",
	address: ((payload01.street default "") ++ (payload01.city default "")) ++ (payload01.state default ""),
	postal: payload01.postal default "",
	country: payload01.country default "",
	miles: payload01.miles default 0,
	creationDate: payload01.creationDate as String default "",
	accType: payload01.accountType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getAccountsByType" doc:id="f8b52508-5612-480e-b3dc-46038577c6b2" >
		<db:select doc:name="Select" doc:id="cb230eaf-e610-467a-a6ae-a2e1267e210a" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT * from flights_customers Where accountType = :actype]]></db:sql>
			<db:input-parameters ><![CDATA[#[{actype: attributes.queryParams.accType}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="JAVA to JSON" doc:id="cb47c02c-389e-489f-a92c-baad3ce711f4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ID: payload01.accountID as Number default 0,
	firstName: payload01.name default "",
	lastName: payload01.name default "",
	address: ((payload01.street default "") ++ (payload01.city default "")) ++ (payload01.state default ""),
	postal: payload01.postal default "",
	country: payload01.country default "",
	miles: payload01.miles default 0,
	creationDate: payload01.creationDate as String default "",
	accType: payload01.accountType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getAccountsByName" doc:id="7fd8a173-6199-4fc2-8f8d-e0b17f645bde" >
		<db:select doc:name="Select" doc:id="a5a61c71-ea1d-4c68-84a9-a78d3b3fd69f" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT * from flights_customers where name = :acname]]></db:sql>
			<db:input-parameters ><![CDATA[#[{acname: attributes.queryParams.name}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="JAVA to JSON" doc:id="4fe7ba0a-74c3-4352-bd88-9ee0933f8916" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ID: payload01.accountID as Number default 0,
	firstName: payload01.name default "",
	lastName: payload01.name default "",
	address: ((payload01.street default "") ++ (payload01.city default "")) ++ (payload01.state default ""),
	postal: payload01.postal default "",
	country: payload01.country default "",
	miles: payload01.miles default 0,
	creationDate: payload01.creationDate as String default "",
	accType: payload01.accountType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getAccountsByNameType" doc:id="d83f7bd8-fd0e-4bbf-bf8b-bffd9d64ceab" >
		<db:select doc:name="Select" doc:id="5750262b-a08e-4811-81bc-d111d01b4746" config-ref="Database_Config" >
			<db:sql ><![CDATA[SELECT * from flights_customers Where name = :aname and accountType =:actype]]></db:sql>
			<db:input-parameters ><![CDATA[#[{aname: attributes.queryParams.name,
  actype: attributes.queryParams.accType
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="JAVA to JSON" doc:id="8ee08f5d-52bb-40f5-b57d-4152cfecece1" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	ID: payload01.accountID as Number default 0,
	firstName: payload01.name default "",
	lastName: payload01.name default "",
	address: ((payload01.street default "") ++ (payload01.city default "")) ++ (payload01.state default ""),
	postal: payload01.postal default "",
	country: payload01.country default "",
	miles: payload01.miles default 0,
	creationDate: payload01.creationDate as String default "",
	accType: payload01.accountType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
